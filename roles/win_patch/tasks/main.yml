---
- name: Installing Applications Updates
  win_updates:
    category__names: Application
    reboot: no
    state: installed # not required. choices: installed;searched. Controls whether found updates are returned as a list or actually installed.,This module also supports Ansible check mode, which has the same effect as setting state=searched
  tags:
  - application

- name: Installing Security Updates
  win_updates:
    category__names: SecurityUpdates
    reboot: no
  tags:
  - security

- name: Installing Critical Updates
  win_updates:
    category__names: CriticalUpdates
    reboot: no
  tags:
  - critical

- name: Installing Rollup Updates
  win_updates:
    category__names: UpdateRollups
    reboot: no
  tags:
  - rollups

- name: Installing   Updates
  win_updates:
      category_names: ServicePacks # choices: Application;Connectors;CriticalUpdates;DefinitionUpdates;DeveloperKits;FeaturePacks;Guidance;SecurityUpdates;ServicePacks;Tools;UpdateRollups;Updates. A scalar or list of categories to install updates from
      reboot: no # not required. Ansible will automatically reboot the remote host if it is required and continue to install updates after the reboot.,This can be used instead of using a M(win_reboot) task after this one and ensures all updates for that category is installed in one go.,Async does not work when C(reboot=True).
      state: installed # not required. choices: installed;searched. Controls whether found updates are returned as a list or actually installed.,This module also supports Ansible check mode, which has the same effect as setting state=searched
  tags:
  - ServicePacks
...